(()=>{"use strict";function e(e){const t=e.attack.toFixed(0),s=e.defence.toFixed(0),a=e.health.toFixed(0);return`üéñ${e.level} ‚öî${t} üõ°${s} ‚ù§${a}`}function t(e,t){return{row:Math.floor(e/t),col:e%t}}function s(e,t){return e.row*t+e.col}function a(e,t){return Math.max(e-t,.1*e)}class i{constructor(){this.boardSize=8,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[]}bindToDOM(e){if(!(e instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=e}drawUi(e){this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="action-restart" class="btn">New Game</button>\n        <button data-id="action-save" class="btn">Save Game</button>\n        <button data-id="action-load" class="btn">Load Game</button>\n      </div>\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n    ',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",(e=>this.onNewGameClick(e))),this.saveGameEl.addEventListener("click",(e=>this.onSaveGameClick(e))),this.loadGameEl.addEventListener("click",(e=>this.onLoadGameClick(e))),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(e);for(let e=0;e<this.boardSize**2;e+=1){const a=document.createElement("div");a.classList.add("cell","map-tile","map-tile-"+((t=e)<(s=this.boardSize)?0===t?"top-left":t===s-1?"top-right":"top":t%s==0?t===s*(s-1)?"bottom-left":"left":t%s==s-1?t===s*s-1?"bottom-right":"right":t>s*(s-1)?"bottom":"center")),a.addEventListener("mouseenter",(e=>this.onCellEnter(e))),a.addEventListener("mouseleave",(e=>this.onCellLeave(e))),a.addEventListener("click",(e=>this.onCellClick(e))),this.boardEl.appendChild(a)}var t,s;this.cells=Array.from(this.boardEl.children)}redrawPositions(e){for(const e of this.cells)e.innerHTML="";for(const s of e){const e=this.boardEl.children[s.position],a=document.createElement("div");a.classList.add("character",s.character.type);const i=document.createElement("div");i.classList.add("health-level");const o=document.createElement("div");o.classList.add("health-level-indicator","health-level-indicator-"+((t=s.character.health)<15?"critical":t<50?"normal":"high")),o.style.width=`${s.character.health}%`,i.appendChild(o),a.appendChild(i),e.appendChild(a)}var t}addCellEnterListener(e){this.cellEnterListeners.push(e)}addCellLeaveListener(e){this.cellLeaveListeners.push(e)}addCellClickListener(e){this.cellClickListeners.push(e)}addNewGameListener(e){this.newGameListeners.push(e)}addSaveGameListener(e){this.saveGameListeners.push(e)}addLoadGameListener(e){this.loadGameListeners.push(e)}onCellEnter(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellEnterListeners.forEach((e=>e.call(null,t)))}onCellLeave(e){e.preventDefault();const t=this.cells.indexOf(e.currentTarget);this.cellLeaveListeners.forEach((e=>e.call(null,t)))}onCellClick(e){const t=this.cells.indexOf(e.currentTarget);this.cellClickListeners.forEach((e=>e.call(null,t)))}onNewGameClick(e){e.preventDefault(),this.newGameListeners.forEach((e=>e.call(null)))}onSaveGameClick(e){e.preventDefault(),this.saveGameListeners.forEach((e=>e.call(null)))}onLoadGameClick(e){e.preventDefault(),this.loadGameListeners.forEach((e=>e.call(null)))}static showError(e){alert(e)}static showMessage(e){alert(e)}selectCell(e,t="yellow"){this.deselectCell(e),this.cells[e].classList.add("selected",`selected-${t}`)}deselectCell(e){const t=this.cells[e];t.classList.remove(...Array.from(t.classList).filter((e=>e.startsWith("selected"))))}showCellTooltip(e,t){this.cells[t].title=e}hideCellTooltip(e){this.cells[e].title=""}showDamage(e,t){return new Promise((s=>{const a=this.cells[e],i=document.createElement("span");i.textContent=t,i.classList.add("damage"),a.appendChild(i),i.addEventListener("animationend",(()=>{a.removeChild(i),s()}))}))}setCursor(e){this.boardEl.style.cursor=e}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}}const o="prairie",l="desert",r="arctic",n="mountain",h="auto",c="pointer",d="crosshair",m="not-allowed";class u{constructor(e){this.characters=[...e]}}class y{constructor(e,t="generic"){if(this.constructor===y)throw new TypeError("–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ Character");this.level=e,this.health=50,this.attack=0,this.defence=0,this.type=t}upgradeStats(){this.attack=Math.max(this.attack,this.attack*(80+this.health)/100),this.defence=Math.max(this.defence,this.defence*(80+this.health)/100),this.health=Math.min(100,this.health+80)}}class p{constructor(e,t){if(!(e instanceof y))throw new Error("character must be instance of Character or its children");if("number"!=typeof t)throw new Error("position must be a number");this.character=e,this.position=t}}function f(e,t,s,a){const i=function*(e,t){for(;;){const s=Math.ceil(Math.random()*t),a=Math.floor(Math.random()*e.length);yield new e[a](s)}}(e,t),o=[];for(let e=0;e<s;e++)o.push(new p(i.next().value,a[e]));return new u(o)}function g(e,t,a){const i=new Set;for(;i.size<e;)i.add(s({row:Math.floor(Math.random()*a),col:t[Math.floor(Math.random()*t.length)]},a));return Array.from(i)}class v extends y{constructor(e){if(super(e,"bowman"),this.attack=25,this.defence=25,this.movementRadius=2,this.attackRadius=2,e>1)for(let t=1;t<e;t++)this.upgradeStats()}}class w extends y{constructor(e){if(super(e,"swordsman"),this.attack=40,this.defence=10,this.movementRadius=4,this.attackRadius=1,e>1)for(let t=1;t<e;t++)this.upgradeStats()}}class P extends y{constructor(e){if(super(e,"magician"),this.attack=10,this.defence=40,this.movementRadius=1,this.attackRadius=4,e>1)for(let t=1;t<e;t++)this.upgradeStats()}}class b extends y{constructor(e){if(super(e,"vampire"),this.attack=25,this.defence=25,this.movementRadius=2,this.attackRadius=2,e>1)for(let t=1;t<e;t++)this.upgradeStats()}}class k extends y{constructor(e){if(super(e,"undead"),this.attack=40,this.defence=10,this.movementRadius=4,this.attackRadius=1,e>1)for(let t=1;t<e;t++)this.upgradeStats()}}class L extends y{constructor(e){if(super(e,"daemon"),this.attack=10,this.defence=10,this.movementRadius=1,this.attackRadius=4,e>1)for(let t=1;t<e;t++)this.upgradeStats()}}class C{constructor(e=[],t=[],s=o,a=1){this.playerPositions=e,this.enemyPositions=t,this.theme=s,this.level=a,this.playersTurn=!0,this.selected=null}get positions(){return[...this.playerPositions,...this.enemyPositions]}static from(e){return new C(e.playerPositions,e.enemyPositions,e.theme,e.level)}}const E=new i;E.bindToDOM(document.querySelector("#game-container"));const S=new class{constructor(e){this.storage=e}save(e){this.storage.setItem("state",JSON.stringify(e))}load(){try{return JSON.parse(this.storage.getItem("state"))}catch(e){throw new Error("Invalid state")}}}(localStorage),M=new class{constructor(e,t){this.gamePlay=e,this.stateService=t,this.state=new C,this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this)),this.gamePlay.addCellClickListener(this.onCellClick.bind(this)),this.gamePlay.addSaveGameListener(this.saveGame.bind(this)),this.gamePlay.addLoadGameListener(this.loadGame.bind(this)),this.gamePlay.addNewGameListener(this.newGame.bind(this))}init(){this.gamePlay.drawUi(o),this.loadGame(),0===this.state.positions.length&&this.newGame()}onCellClick(e){const t=this.state.playerPositions.find((t=>t.position===e));if(t)return this.state.selected&&this.gamePlay.deselectCell(this.state.selected.position),this.state.selected=t,void this.gamePlay.selectCell(e);const s=this.state.enemyPositions.find((t=>t.position===e));if(s)return null===this.state.selected?void i.showError("–≠—Ç–æ –ø–µ—Ä—Å–æ–Ω–∞–∂ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞"):void(this.canAttack(this.state.selected,e)&&this.attack(this.state.selected,s));this.state.selected&&this.canMove(this.state.selected,e)&&this.move(this.state.selected,e)}onCellEnter(t){const s=this.state.playerPositions.find((e=>e.position===t)),a=this.state.enemyPositions.find((e=>e.position===t));s?(this.gamePlay.showCellTooltip(e(s.character),t),this.gamePlay.setCursor(c)):a?(this.gamePlay.showCellTooltip(e(a.character),t),this.state.selected&&(this.canAttack(this.state.selected,a.position)?(this.gamePlay.setCursor(d),this.gamePlay.selectCell(t,"red")):this.gamePlay.setCursor(m))):this.state.selected&&this.canMove(this.state.selected,t)?(this.gamePlay.setCursor(c),this.gamePlay.selectCell(t,"green")):this.gamePlay.setCursor(m)}onCellLeave(e){const t=this.state.playerPositions.find((t=>t.position===e)),s=this.state.enemyPositions.find((t=>t.position===e));t||this.gamePlay.deselectCell(e),(t||s)&&this.gamePlay.hideCellTooltip(e),this.gamePlay.setCursor(h)}newGame(){this.state&&this.deselectAll(),this.setTheme(o);const e=g(3,[0,1],this.gamePlay.boardSize),t=g(3,[this.gamePlay.boardSize-1,this.gamePlay.boardSize-2],this.gamePlay.boardSize),s=f([v,w,P],1,3,e),a=f([b,k,L],1,3,t);this.state=new C(s.characters,a.characters),this.gamePlay.redrawPositions(this.state.positions)}saveGame(){this.state.selected&&(this.state.selected=null),this.stateService.save(this.state)}loadGame(){this.state&&this.state.selected&&this.deselectAll();try{const e=this.stateService.load();null!==e&&(this.state=C.from(e),this.gamePlay.drawUi(this.state.theme),this.gamePlay.redrawPositions(this.state.positions))}catch(e){i.showError(e),console.error(e)}}deselectAll(){this.state.selected&&(this.state.selected=null);for(let e=0;e<this.gamePlay.boardSize**2;e++)this.gamePlay.deselectCell(e)}canMove(e,s){if(this.state.positions.find((e=>e.position===s)))return!1;const a=t(e.position,this.gamePlay.boardSize),i=e.character.movementRadius,o=t(s,this.gamePlay.boardSize);return Math.abs(o.row-a.row)<=i&&Math.abs(o.col-a.col)<=i&&(o.col===a.col||o.row===a.row||Math.abs(o.row-a.row)===Math.abs(o.col-a.col))}canAttack(e,s){if(e.position===s)return!1;const a=t(s,this.gamePlay.boardSize),i=t(e.position,this.gamePlay.boardSize),o=e.character.attackRadius;return Math.abs(a.row-i.row)<=o&&Math.abs(a.col-i.col)<=o}move(e,t){const s=e.position;this.state.positions.find((e=>e.position===s)).position=t,this.deselectAll(),this.gamePlay.redrawPositions(this.state.positions),this.next()}attack(e,t){const s=a(e.character.attack,t.character.defence);t.character.health-=s,this.gamePlay.showDamage(t.position,s.toFixed(0)).then((()=>{if(t.character.health<=0){if(this.characterDeath(t),0===this.state.enemyPositions.length)return this.levelUp(this.state.selected.character),void this.deselectAll();if(0===this.state.playerPositions.length)return this.endGame("–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!"),void this.deselectAll()}this.deselectAll(),this.gamePlay.redrawPositions(this.state.positions),this.next()}))}characterDeath(e){var t;"undead"===(t=e.character).type||"vampire"===t.type||"daemon"===t.type?this.state.enemyPositions.splice(this.state.enemyPositions.indexOf(e),1):this.state.playerPositions.splice(this.state.playerPositions.indexOf(e),1),this.gamePlay.redrawPositions(this.state.positions)}enemyMove(){const e=[],t=[];if(this.state.enemyPositions.forEach((s=>{this.state.playerPositions.forEach((i=>{this.canAttack(i,s.position)&&e.push({enemy:s,player:i,damage:a(i.character.attack,s.character.defence)/s.character.health}),this.canAttack(s,i.position)&&t.push({enemy:s,player:i,damage:a(s.character.attack,i.character.defence)/i.character.health})}))})),e.sort(((e,t)=>t.damage-e.damage)),t.sort(((e,t)=>t.damage-e.damage)),t[0]&&e[0])if(e[0].damage>t[0].damage){const s=this.searchSafeZone(e[0].enemy,e[0].player);-1===s?this.attack(t[0].enemy,t[0].player):this.move(e[0].enemy,s)}else this.attack(t[0].enemy,t[0].player);else if(t[0]&&0===e.length)this.attack(t[0].enemy,t[0].player);else if(e[0]&&0===t.length){const t=this.searchSafeZone(e[0].enemy,e[0].player);-1===t?this.randomEnemyMove():this.move(e[0].enemy,t)}else this.randomEnemyMove()}searchSafeZone(e,a){const i=e.character.radius,o=t(e.position,this.gamePlay.boardSize),l=o.row-i<0?0:o.row-i,r=o.row+i>=this.gamePlay.boardSize?this.gamePlay.boardSize-1:o.row+i,n=o.col-i<0?0:o.col-i,h=o.col+i>=this.gamePlay.boardSize?this.gamePlay.boardSize-1:o.col+i,c=[];for(let t=l;t<=r;t++)for(let i=n;i<=h;i++){const o=s({row:t,col:i},this.gamePlay.boardSize);this.canMove(e,o)&&!this.canAttack(a,o)&&c.push(o)}return c.length>0?c[Math.floor(Math.random()*c.length)]:-1}randomEnemyMove(){const e=this.state.enemyPositions[Math.floor(Math.random()*this.state.enemyPositions.length)],a=t(e.position,this.gamePlay.boardSize),i=e.character.movementRadius;let o;do{const e=Math.floor(8*Math.random()),t=Math.ceil(Math.random()*i);switch(e){case 0:o={row:a.row-t,col:a.col};break;case 1:o={row:a.row-t,col:a.col+t};break;case 2:o={row:a.row,col:a.col+t};break;case 3:o={row:a.row+t,col:a.col+t};break;case 4:o={row:a.row+t,col:a.col};break;case 5:o={row:a.row+t,col:a.col-t};break;case 6:o={row:a.row,col:a.col-t};break;default:o={row:a.row-t,col:a.col-t}}o.row=Math.max(0,Math.min(o.row,this.gamePlay.boardSize-1)),o.col=Math.max(0,Math.min(o.col,this.gamePlay.boardSize-1))}while(!this.canMove(e,s(o,this.gamePlay.boardSize)));this.move(e,s(o,this.gamePlay.boardSize))}next(){this.state.playersTurn=!this.state.playersTurn,!1===this.state.playersTurn&&this.enemyMove()}levelUp(e){if(4===this.state.level)return void this.endGame("–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!");this.state.level+=1,e.level+=1,e.attack=Math.max(e.attack,e.attack*(80+e.health)/100),e.defence=Math.max(e.defence,e.defence*(80+e.health)/100),e.health=Math.min(100,e.health+80);const t=g(this.state.playerPositions.length,[0,1],this.gamePlay.boardSize);for(let e=0;e<this.state.playerPositions.length;e++)this.state.playerPositions[e].position=t[e];const s=g(3,[this.gamePlay.boardSize-1,this.gamePlay.boardSize-2],this.gamePlay.boardSize),a=f([b,k,L],Math.max(...this.state.playerPositions.map((e=>e.character.level))),3,s);this.state.enemyPositions=a.characters,this.nextTheme(),this.gamePlay.redrawPositions(this.state.positions)}endGame(e){i.showMessage(e),this.gamePlay.container.querySelector(".board").style.pointerEvents="none"}nextTheme(){switch(this.state.theme){case o:this.setTheme(l);break;case l:this.setTheme(r);break;case r:this.setTheme(n);break;default:this.setTheme(o)}}setTheme(e){this.gamePlay.drawUi(e),this.state.theme=e}}(E,S);M.init()})();